[하스켈 무크 가이드 노트]

=========
Lecture 2
=========

2.5절 타입유추 및 다형성(Type inference and polymorphism) 

f가 함수라는 점과 인자 xs, ys가 두개라는 점에 착안하여 함수타입 틀을 유추할 수 있다.

   f xs ys = [ head xs, head ys ]

   f :: ??? -> ??? -> ???


head :: [a] -> a


head xs   ===> xs의 타입   [ ??? ] 
head ys   ===> ys의 타입   [ ??? ]

f :: [ ??? ] -> [ ??? ] -> ???

[ head xs, head ys ]  ===> xs의 타입과 ys의 타입이 같다 

f :: [ a ] -> [ a ] -> ???

[ head xs, head ys ] 의 타입???

  head xs :: a,   head ys :: a 

[ head xs, head ys ] 의 타입 ===> [a]

f :: [ a ] -> [ a ] -> [ a ]


===
g zs = f "Moi" zs

g :: ??? -> ???

f의 첫번째 인자 타입 [ a ] 

"Moi"인자로 주어짐 String ===> [Char] 

따라서 a = Char.

f의 타입 [ Char ] -> [ Char ] -> [ Char] 


zs의 타입 [ Char ] 

g :: [ Char ] -> ???

함수 g의 몸체 f "Moi" zs이므로 그 타입은 [a]이고
그런데 a가 Char이므로 
[ Char ] 타입의 값을 리턴할 것입니다. 

g :: [ Char ] -> [ Char ] 


===

Type paramters

(1)
   [ ??? ] 리스트 타입 

      ???를 Char를 넣을수도 있고
	   Bool을  넣을수도 있고

      Char나 Bool과 같은 것을 
      (리스트 타입에 대한) 타입 패러미터 (type parameter)라 부른다.

(2)
    Maybe a 타입 

      data Maybe a = Nothing | Just a 

    Maybe Char
    Maybe Bool

       Char나 Bool과 같은 것을 
       (Maybe 타입에 대한) 타입 패러미터 (type parameter)라 부른다.


Maybe a

정상적인 나눗셈 
  10 `div` 2  ==> 5

비정상적인 경우
  10 `div` 0  ==> 프로그램 비정상 종료!


safeDiv x y = if y == 0
              then Nothing
              else Just (x `div` y)

주의) Nothing은 문자열 "Nothing"이 아닙니다!

참고) Just와 Nothing을 data constructor (값을 만들어내는 역할을 담당)

Prelude> :t Nothing 
Nothing :: Maybe a

Prelude> :t Just 
Just :: a -> Maybe a
